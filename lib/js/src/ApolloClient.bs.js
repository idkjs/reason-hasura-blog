// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var ApolloLinks = require("reason-apollo/lib/js/src/ApolloLinks.bs.js");
var ApolloLink = require("apollo-link");
var ReasonApollo = require("reason-apollo/lib/js/src/ReasonApollo.bs.js");
var ApolloLinkWs = require("apollo-link-ws");
var ApolloUtilities = require("apollo-utilities");
var ApolloInMemoryCache = require("reason-apollo/lib/js/src/ApolloInMemoryCache.bs.js");

function makeApolloClient(param) {
  var inMemoryCache = ApolloInMemoryCache.createInMemoryCache(undefined, undefined, undefined);
  var webSocketLink = new ApolloLinkWs.WebSocketLink({
        uri: "ws://localhost:8080/v1/graphql",
        options: {
          reconnect: true,
          connectionParams: undefined
        }
      });
  var httpLink = ApolloLinks.createHttpLink("http://localhost:8080/v1/graphql", undefined, undefined, undefined, undefined, undefined, undefined);
  var webSocketHttpLink = ApolloLink.split((function (operation) {
          var operationDefition = ApolloUtilities.getMainDefinition(operation.query);
          if (operationDefition.kind === "OperationDefinition") {
            return operationDefition.operation === "subscription";
          } else {
            return false;
          }
        }), webSocketLink, httpLink);
  return ReasonApollo.createApolloClient(webSocketHttpLink, inMemoryCache, undefined, undefined, undefined, undefined, undefined);
}

exports.makeApolloClient = makeApolloClient;
/* ApolloLinks Not a pure module */
