// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";

function map(result, f) {
  if (typeof result === "number") {
    if (result === /* Loading */0) {
      return /* Loading */0;
    } else {
      return /* NoData */1;
    }
  } else if (result.TAG) {
    return {
            TAG: /* Error */1,
            _0: result._0
          };
  } else {
    return {
            TAG: /* Data */0,
            _0: Curry._1(f, result._0)
          };
  }
}

function resolve(data) {
  return {
          TAG: /* Data */0,
          _0: data
        };
}

function $$default(result, value) {
  if (typeof result === "number" || result.TAG) {
    return value;
  } else {
    return result._0;
  }
}

function let_(result, f) {
  if (typeof result === "number") {
    if (result === /* Loading */0) {
      return /* Loading */0;
    } else {
      return /* NoData */1;
    }
  } else if (result.TAG) {
    return {
            TAG: /* Error */1,
            _0: result._0
          };
  } else {
    return Curry._1(f, result._0);
  }
}

function all2(s1, s2) {
  return let_(s1, (function (s1$prime) {
                return let_(s2, (function (s2$prime) {
                              return {
                                      TAG: /* Data */0,
                                      _0: [
                                        s1$prime,
                                        s2$prime
                                      ]
                                    };
                            }));
              }));
}

function all3(s1, s2, s3) {
  return let_(s1, (function (s1$prime) {
                return let_(s2, (function (s2$prime) {
                              return let_(s3, (function (s3$prime) {
                                            return {
                                                    TAG: /* Data */0,
                                                    _0: [
                                                      s1$prime,
                                                      s2$prime,
                                                      s3$prime
                                                    ]
                                                  };
                                          }));
                            }));
              }));
}

function all4(s1, s2, s3, s4) {
  return let_(s1, (function (s1$prime) {
                return let_(s2, (function (s2$prime) {
                              return let_(s3, (function (s3$prime) {
                                            return let_(s4, (function (s4$prime) {
                                                          return {
                                                                  TAG: /* Data */0,
                                                                  _0: [
                                                                    s1$prime,
                                                                    s2$prime,
                                                                    s3$prime,
                                                                    s4$prime
                                                                  ]
                                                                };
                                                        }));
                                          }));
                            }));
              }));
}

function all5(s1, s2, s3, s4, s5) {
  return let_(s1, (function (s1$prime) {
                return let_(s2, (function (s2$prime) {
                              return let_(s3, (function (s3$prime) {
                                            return let_(s4, (function (s4$prime) {
                                                          return let_(s5, (function (s5$prime) {
                                                                        return {
                                                                                TAG: /* Data */0,
                                                                                _0: [
                                                                                  s1$prime,
                                                                                  s2$prime,
                                                                                  s3$prime,
                                                                                  s4$prime,
                                                                                  s5$prime
                                                                                ]
                                                                              };
                                                                      }));
                                                        }));
                                          }));
                            }));
              }));
}

export {
  map ,
  resolve ,
  $$default ,
  $$default as default,
  let_ ,
  all2 ,
  all3 ,
  all4 ,
  all5 ,
  
}
/* No side effect */
